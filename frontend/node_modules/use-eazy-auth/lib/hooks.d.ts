import { ChangeEvent, FormEvent } from 'react';
import { AuthActionCreators, AuthUser } from './Auth';
export declare function useAuthState(): import("./Auth").AuthState;
export declare function useAuthActions<A = any, R = any, U = any, C = any>(): AuthActionCreators<A, R, U, C>;
export declare function useAuthUser<U = any, A = any>(): AuthUser<U, A>;
interface ValueProp {
    value: string;
}
interface OnChangeProp {
    onChange(e: ChangeEvent<HTMLInputElement>): void;
}
export interface ShapeLoginResult {
    handleSubmit(e: FormEvent): void;
    login(): void;
    loginError: any;
    loginLoading: boolean;
}
export declare type LoginResult = ShapeLoginResult & Record<string, ValueProp & OnChangeProp>;
export declare function useLogin(credentialsConf?: string[]): LoginResult;
export {};
