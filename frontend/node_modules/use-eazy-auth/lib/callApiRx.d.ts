import { Dispatch, MutableRefObject } from 'react';
import { Observable } from 'rxjs';
import { AuthActions } from './actionTypes';
import { AuthStorage } from './storage';
import { AuthTokens, RefreshTokenCall, CurryAuthApiFn, CurryAuthApiFnPromise } from './types';
export default function makeCallApiRx<A, R>(refreshTokenCall: RefreshTokenCall<A, R> | undefined, dispatch: Dispatch<AuthActions>, storage: AuthStorage<A, R>, tokenRef: MutableRefObject<AuthTokens<A, R> | null>, bootRef: MutableRefObject<boolean>, actionObservable: Observable<AuthActions>): {
    callAuthApiObservable: <O>(apiFn: CurryAuthApiFn<A, O>, ...args: any[]) => Observable<O>;
    callAuthApiPromise: <O_1>(apiFn: CurryAuthApiFnPromise<A, O_1>, ...args: any[]) => Promise<O_1>;
    unsubscribe: () => void;
};
