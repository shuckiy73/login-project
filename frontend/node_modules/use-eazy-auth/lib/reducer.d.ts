import { AuthActions } from './actionTypes';
import { InitialAuthData } from './types';
export interface AuthStateShape<A = any, R = any, U = any> {
    bootstrappingAuth: boolean;
    bootstrappedAuth: boolean;
    user: U | null;
    accessToken: A | null;
    refreshToken: R | null;
    expires?: number | null;
    loginLoading: boolean;
    loginError: any;
}
export declare function initAuthState<A, R, U>(initialData: InitialAuthData<A, R, U> | undefined): AuthStateShape<A, R, U>;
export default function authReducer<A = any, R = any, U = any>(previousState: AuthStateShape<A, R, U> | undefined, action: AuthActions<A, R, U>): AuthStateShape<A, R, U>;
