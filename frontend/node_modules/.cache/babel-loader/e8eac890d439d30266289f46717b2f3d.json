{"ast":null,"code":"/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar __window = typeof window !== 'undefined' && window;\n\nvar __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope && self;\n\nvar __global = typeof global !== 'undefined' && global;\n\nvar _root = __window || __global || __self;\n/*@__PURE__*/\n\n\n(function () {\n  if (!_root) {\n    throw /*@__PURE__*/new Error('RxJS could not find any global context (window, self, global)');\n  }\n})();\n\nexport { _root as root };","map":{"version":3,"sources":["K:\\Test\\login\\login-project\\frontend\\node_modules\\rxjs\\src\\internal\\util\\root.ts"],"names":[],"mappings":"AAeA;AACA,IAAM,QAAM,GAAG,OAAO,MAAP,KAAgB,WAAhB,IAA+B,MAA9C;;IACI,MAAI,GAAA,OAAY,IAAZ,KAAY,WAAZ,IAAiC,OAAK,iBAAL,KAAK,WAAtC,IACF,IAAA,YAAW,iBADT,IAC2B,I;;AACnC,IAAM,QAAa,GAAA,OAAQ,MAAR,KAAoB,WAApB,IAA+B,MAAlD;;AAKA,IAAC,KAAA,GAAA,QAAA,IAAA,QAAA,IAAA,MAAD;AACE;;;AAAU,CAAA,YAAE;MACV,CAAA,K,EAAM;AACP,UAAA,aAAA,IAAA,KAAA,CAAA,+DAAA,CAAA;AACE;AAEL,CALY","sourcesContent":["declare let global: any;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\ndeclare var WorkerGlobalScope: any;\n// CommonJS / Node have global context exposed as \"global\" variable.\n// We don't want to include the whole node.d.ts this this compilation unit so we'll just fake\n// the global \"global\" var for now.\n\nconst __window = typeof window !== 'undefined' && window;\nconst __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nconst __global = typeof global !== 'undefined' && global;\nconst _root: any = __window || __global || __self;\n\n// Workaround Closure Compiler restriction: The body of a goog.module cannot use throw.\n// This is needed when used with angular/tsickle which inserts a goog.module statement.\n// Wrap in IIFE\n(function () {\n  if (!_root) {\n    throw new Error('RxJS could not find any global context (window, self, global)');\n  }\n})();\n\nexport { _root as root };"]},"metadata":{},"sourceType":"module"}