{"ast":null,"code":"/** PURE_IMPORTS_START _Subscriber PURE_IMPORTS_END */\nimport { Subscriber } from '../Subscriber';\nexport function canReportError(observer) {\n  while (observer) {\n    var _a = observer,\n        closed_1 = _a.closed,\n        destination = _a.destination,\n        isStopped = _a.isStopped;\n\n    if (closed_1 || isStopped) {\n      return false;\n    } else if (destination && destination instanceof Subscriber) {\n      observer = destination;\n    } else {\n      observer = null;\n    }\n  }\n\n  return true;\n}","map":{"version":3,"sources":["K:\\Test\\login\\login-project\\frontend\\node_modules\\rxjs\\src\\internal\\util\\canReportError.ts"],"names":[],"mappings":"AAAA;AASA,SAAM,UAAN,QAAgB,eAAhB;AACE,OAAA,SAAO,cAAP,CAAiB,QAAjB,EAAiB;AACT,SAAA,QAAA,EAAA;AACN,QAAI,EAAA,GAAA,QAAJ;AAAA,QAAc,QAAW,GAAA,EAAA,CAAA,MAAzB;AAAA,QAAyB,WAAA,GAAA,EAAA,CAAA,WAAzB;AAAA,QAAyB,SAAA,GAAA,EAAA,CAAA,SAAzB;;QACE,QAAO,IAAK,S,EAAC;AACd,aAAA,KAAA;AAAM,K,MACL,IAAA,WAAW,IAAA,WAAY,YAAA,UAAvB,EAAuB;AACxB,MAAA,QAAA,GAAA,WAAA;AAAM,KADL,MAEA;AACD,MAAA,QAAA,GAAA,IAAA;AACF;AACD;;AACD,SAAA,IAAA","sourcesContent":["import { Subscriber } from '../Subscriber';\nimport { Subject } from '../Subject';\n\n/**\n * Determines whether the ErrorObserver is closed or stopped or has a\n * destination that is closed or stopped - in which case errors will\n * need to be reported via a different mechanism.\n * @param observer the observer\n */\nexport function canReportError(observer: Subscriber<any> | Subject<any>): boolean {\n  while (observer) {\n    const { closed, destination, isStopped } = observer as any;\n    if (closed || isStopped) {\n      return false;\n    } else if (destination && destination instanceof Subscriber) {\n      observer = destination;\n    } else {\n      observer = null;\n    }\n  }\n  return true;\n}\n"]},"metadata":{},"sourceType":"module"}